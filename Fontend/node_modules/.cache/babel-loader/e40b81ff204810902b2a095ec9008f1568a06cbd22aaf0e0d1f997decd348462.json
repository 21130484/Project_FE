{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\nconst Page = ({}) => {\n  _s();\n  const [rssItems, setRssItems] = useState([]);\n  function FetchDataFromRssFeed() {\n    const request = new XMLHttpRequest();\n    request.onreadystatechange = () => {\n      if (request.readyState === 4 && request.status === 200) {\n        const parser = new DOMParser();\n        const xml = parser.parseFromString(request.responseText, 'text/xml');\n        const items = xml.querySelectorAll('item');\n        const rssItemsArray = Array.from(items, item => {\n          var _item$querySelector, _item$querySelector2, _item$querySelector3, _item$querySelector4;\n          return {\n            title: ((_item$querySelector = item.querySelector('title')) === null || _item$querySelector === void 0 ? void 0 : _item$querySelector.textContent) || '',\n            link: ((_item$querySelector2 = item.querySelector('link')) === null || _item$querySelector2 === void 0 ? void 0 : _item$querySelector2.textContent) || '',\n            description: ((_item$querySelector3 = item.querySelector('description')) === null || _item$querySelector3 === void 0 ? void 0 : _item$querySelector3.textContent) || '',\n            pubDate: ((_item$querySelector4 = item.querySelector('pubDate')) === null || _item$querySelector4 === void 0 ? void 0 : _item$querySelector4.textContent) || ''\n          };\n        });\n        setRssItems(rssItemsArray);\n      }\n    };\n    request.open('GET', 'https://nld.com.vn/rss/home.rss', true);\n    request.send();\n  }\n  useEffect(() => {\n    FetchDataFromRssFeed();\n  }, []);\n  return console.log(rssItems);\n};\n_s(Page, \"kChmdvAyWxRn48oytVZG8lTwrkU=\");\n_c = Page;\nexport default Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"names":["useState","useEffect","CORS_PROXY","Page","_s","rssItems","setRssItems","FetchDataFromRssFeed","request","XMLHttpRequest","onreadystatechange","readyState","status","parser","DOMParser","xml","parseFromString","responseText","items","querySelectorAll","rssItemsArray","Array","from","item","_item$querySelector","_item$querySelector2","_item$querySelector3","_item$querySelector4","title","querySelector","textContent","link","description","pubDate","open","send","console","log","_c","$RefreshReg$"],"sources":["C:/Users/Hieu/Desktop/New folder/Project_FE/Fontend/src/component/crawlRss.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Parser from 'rss-parser';\r\n\r\nconst CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\r\ntype Props = {}\r\ninterface RssItem {\r\n    title: string;\r\n    link: string;\r\n    description: string;\r\n    pubDate: string;\r\n}\r\nconst Page = ({}: Props) => {\r\n    const [rssItems, setRssItems] = useState<RssItem[]>([]);\r\n\r\n    function FetchDataFromRssFeed() {\r\n        const request = new XMLHttpRequest();\r\n        request.onreadystatechange = () => {\r\n            if (request.readyState === 4 && request.status === 200) {\r\n                const parser = new DOMParser();\r\n                const xml = parser.parseFromString(request.responseText, 'text/xml');\r\n                const items = xml.querySelectorAll('item');\r\n                const rssItemsArray: RssItem[] = Array.from(items, (item) => ({\r\n                    title: item.querySelector('title')?.textContent || '',\r\n                    link: item.querySelector('link')?.textContent || '',\r\n                    description: item.querySelector('description')?.textContent || '',\r\n                    pubDate: item.querySelector('pubDate')?.textContent || '',\r\n                }));\r\n\r\n                setRssItems(rssItemsArray);\r\n            }\r\n        };\r\n        request.open('GET', 'https://nld.com.vn/rss/home.rss', true);\r\n        request.send();\r\n    }\r\n\r\n    useEffect(() => {\r\n        FetchDataFromRssFeed()\r\n    },[]);\r\n\r\n    return (\r\n        console.log(rssItems)\r\n    )\r\n}\r\nexport default Page\r\n"],"mappings":";AAAA,SAAgBA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAGlD,MAAMC,UAAU,GAAG,sCAAsC;AAQzD,MAAMC,IAAI,GAAGA,CAAC,CAAQ,CAAC,KAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAY,EAAE,CAAC;EAEvD,SAASO,oBAAoBA,CAAA,EAAG;IAC5B,MAAMC,OAAO,GAAG,IAAIC,cAAc,CAAC,CAAC;IACpCD,OAAO,CAACE,kBAAkB,GAAG,MAAM;MAC/B,IAAIF,OAAO,CAACG,UAAU,KAAK,CAAC,IAAIH,OAAO,CAACI,MAAM,KAAK,GAAG,EAAE;QACpD,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;QAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACR,OAAO,CAACS,YAAY,EAAE,UAAU,CAAC;QACpE,MAAMC,KAAK,GAAGH,GAAG,CAACI,gBAAgB,CAAC,MAAM,CAAC;QAC1C,MAAMC,aAAwB,GAAGC,KAAK,CAACC,IAAI,CAACJ,KAAK,EAAGK,IAAI;UAAA,IAAAC,mBAAA,EAAAC,oBAAA,EAAAC,oBAAA,EAAAC,oBAAA;UAAA,OAAM;YAC1DC,KAAK,EAAE,EAAAJ,mBAAA,GAAAD,IAAI,CAACM,aAAa,CAAC,OAAO,CAAC,cAAAL,mBAAA,uBAA3BA,mBAAA,CAA6BM,WAAW,KAAI,EAAE;YACrDC,IAAI,EAAE,EAAAN,oBAAA,GAAAF,IAAI,CAACM,aAAa,CAAC,MAAM,CAAC,cAAAJ,oBAAA,uBAA1BA,oBAAA,CAA4BK,WAAW,KAAI,EAAE;YACnDE,WAAW,EAAE,EAAAN,oBAAA,GAAAH,IAAI,CAACM,aAAa,CAAC,aAAa,CAAC,cAAAH,oBAAA,uBAAjCA,oBAAA,CAAmCI,WAAW,KAAI,EAAE;YACjEG,OAAO,EAAE,EAAAN,oBAAA,GAAAJ,IAAI,CAACM,aAAa,CAAC,SAAS,CAAC,cAAAF,oBAAA,uBAA7BA,oBAAA,CAA+BG,WAAW,KAAI;UAC3D,CAAC;QAAA,CAAC,CAAC;QAEHxB,WAAW,CAACc,aAAa,CAAC;MAC9B;IACJ,CAAC;IACDZ,OAAO,CAAC0B,IAAI,CAAC,KAAK,EAAE,iCAAiC,EAAE,IAAI,CAAC;IAC5D1B,OAAO,CAAC2B,IAAI,CAAC,CAAC;EAClB;EAEAlC,SAAS,CAAC,MAAM;IACZM,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAC,EAAE,CAAC;EAEL,OACI6B,OAAO,CAACC,GAAG,CAAChC,QAAQ,CAAC;AAE7B,CAAC;AAAAD,EAAA,CA/BKD,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAgCV,eAAeA,IAAI;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}