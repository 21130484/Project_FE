{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useRssFeed = (url, quantity) => {\n  _s();\n  const [rssItems, setRssItems] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3002/rss?url=${encodeURIComponent(url)}`);\n        if (!response.ok) {\n          throw new Error('Không thể tải dữ liệu RSS');\n        }\n        const data = await response.json();\n        if (quantity !== -1) {\n          setRssItems(data.slice(0, quantity));\n        } else {\n          setRssItems(data);\n        }\n      } catch (error) {\n        console.error('Lỗi khi lấy dữ liệu RSS:', error);\n      }\n    };\n    fetchData();\n  }, [url, quantity]);\n  return rssItems;\n};\n_s(useRssFeed, \"kChmdvAyWxRn48oytVZG8lTwrkU=\");\nexport default useRssFeed;","map":{"version":3,"names":["useState","useEffect","useRssFeed","url","quantity","_s","rssItems","setRssItems","fetchData","response","fetch","encodeURIComponent","ok","Error","data","json","slice","error","console"],"sources":["C:/Users/Hieu/Desktop/New folder/Project_FE/Fontend/src/component/crawlRss.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\ninterface RssItem {\r\n    title: string;\r\n    link: string;\r\n    anchorTag: string;\r\n    textContent: string;\r\n    pubDate: string;\r\n}\r\nconst useRssFeed = (url: string, quantity: number): RssItem[] => {\r\n    const [rssItems, setRssItems] = useState<RssItem[]>([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3002/rss?url=${encodeURIComponent(url)}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Không thể tải dữ liệu RSS');\r\n                }\r\n\r\n                const data = await response.json();\r\n                if (quantity !== -1) {\r\n                    setRssItems(data.slice(0, quantity));\r\n                } else {\r\n                    setRssItems(data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Lỗi khi lấy dữ liệu RSS:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [url, quantity]);\r\n\r\n    return rssItems;\r\n};\r\n\r\nexport default useRssFeed;"],"mappings":";AAAA,SAAgBA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AASlD,MAAMC,UAAU,GAAGA,CAACC,GAAW,EAAEC,QAAgB,KAAgB;EAAAC,EAAA;EAC7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAY,EAAE,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACZ,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiCC,kBAAkB,CAACR,GAAG,CAAC,EAAE,CAAC;QACxF,IAAI,CAACM,QAAQ,CAACG,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAChD;QAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,IAAIX,QAAQ,KAAK,CAAC,CAAC,EAAE;UACjBG,WAAW,CAACO,IAAI,CAACE,KAAK,CAAC,CAAC,EAAEZ,QAAQ,CAAC,CAAC;QACxC,CAAC,MAAM;UACHG,WAAW,CAACO,IAAI,CAAC;QACrB;MACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDT,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,GAAG,EAAEC,QAAQ,CAAC,CAAC;EAEnB,OAAOE,QAAQ;AACnB,CAAC;AAACD,EAAA,CA1BIH,UAAU;AA4BhB,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}